// Both of these suggestions from ReSharper should be ignored.  If the properties are private or 'get-only' then they
// can't be De/Serialized properly
// ReSharper disable AutoPropertyCanBeMadeGetOnly.Global
// ReSharper disable MemberCanBePrivate.Global

// This was regarding the GetHashCode function generated by Rider which ReSharper then complained about it
// ReSharper disable NonReadonlyMemberInGetHashCode

namespace ConfigurationTest.Configs;

public class OtherConfig : IEquatable<OtherConfig>
{
	public List<string> Text { get; set; } = new() { "Testing", "1, 2, 3" };
	public object? Anything { get; set; } = "Just something random";
	public long Long { get; set; } = 123456789101112;

	public bool Equals(OtherConfig? other)
	{
		if (ReferenceEquals(null, other)) return false;
		if (ReferenceEquals(this, other)) return true;
		return Text.SequenceEqual(other.Text)
		       && Equals(Anything, other.Anything)
		       && Long == other.Long;
	}

	public override bool Equals(object? obj)
	{
		if (ReferenceEquals(null, obj)) return false;
		if (ReferenceEquals(this, obj)) return true;
		return obj.GetType() == GetType()
		       && Equals((OtherConfig)obj);
	}

	public override int GetHashCode()
	{
		return HashCode.Combine(Text, Anything, Long);
	}
}